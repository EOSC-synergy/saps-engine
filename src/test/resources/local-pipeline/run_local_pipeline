#!/bin/bash

if [ $# -ne 5 ];
then
  echo "Usage: usgs_username usgs_password [landsat_5 | landsat_7 | landsat_8] region_pathrow image_date"
  echo "For example: ./run_local_pipeline <usgs_username> <usgs_password> landsat_5 215065 2011-10-18"
  exit 1
fi

USGS_USERNAME=$1
USGS_PASSWORD=$2
IMAGE_DATASET=$3
IMAGE_REGION=$4
IMAGE_DATE=$5

IMAGE_NAME_INPUTDOWNLOADER="fogbow/inputdownloader:latest"
IMAGE_NAME_WORKER="fogbow/worker:latest"

CONTAINER_NAME_INPUTDOWNLOADER="inputdownloader_container"
CONTAINER_NAME_WORKER="worker_container"

function exit_handler {
  if [[ $? -ne 0 ]];
  then
    exit 1
  fi
}

function check_docker {
  which docker
  exit_handler
}

function pull_image_inputdownloader {
  docker pull $IMAGE_NAME_INPUTDOWNLOADER
}

function pull_image_worker {
  docker pull $IMAGE_NAME_WORKER
}

function build_container_inputdownloader {
  docker ps -a | grep "$CONTAINER_NAME_INPUTDOWNLOADER"
  if [ $? -eq 0 ];
  then
    docker stop $CONTAINER_NAME_INPUTDOWNLOADER
    docker rm $CONTAINER_NAME_INPUTDOWNLOADER
  fi

  docker run -it -d --name $CONTAINER_NAME_INPUTDOWNLOADER -v saps-vol:/tmp $IMAGE_NAME_INPUTDOWNLOADER
}

function build_container_worker {
  docker ps -a | grep "$CONTAINER_NAME_WORKER"
  if [ $? -eq 0 ];
  then
    docker stop $CONTAINER_NAME_WORKER
    docker rm $CONTAINER_NAME_WORKER
  fi
  docker run -it -d --name $CONTAINER_NAME_WORKER -v saps-vol:/tmp $IMAGE_NAME_WORKER
}

function run_download {
  docker exec $CONTAINER_NAME_INPUTDOWNLOADER mkdir -p /tmp/input /home/ubuntu/results /home/ubuntu/metadata
  docker exec -e USGS_USERNAME=$USGS_USERNAME -e USGS_PASSWORD=$USGS_PASSWORD $CONTAINER_NAME_INPUTDOWNLOADER sh /home/ubuntu/run.sh $IMAGE_DATASET $IMAGE_REGION $IMAGE_DATE /tmp/input /tmp/input
}

function run_worker {
  docker exec $CONTAINER_NAME_INPUTDOWNLAODER mv /home/ubuntu/results /home/ubuntu/metadata /tmp
  docker exec $CONTAINER_NAME_WORKER mkdir -p /tmp/preprocess
  docker exec $CONTAINER_NAME_WORKER bash /home/ubuntu/bin/run.sh /tmp/input /tmp/results /tmp/preprocess /tmp/metadata
}

check_docker

pull_image_inputdownloader
exit_handler

pull_image_worker
exit_handler

build_container_inputdownloader
exit_handler

build_container_worker
exit_handler

run_download
exit_handler

run_worker
exit_handler
