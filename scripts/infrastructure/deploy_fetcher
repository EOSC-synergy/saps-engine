#!/bin/bash
#
# Deploy the fetcher component

#FIXME add classpath and class names to constants

if [[ $# -ne 1 ]]; then
  echo "Usage:" $0 "path/to/private_key storage_size"
  exit 1
fi

PRIVATE_KEY_FILE=$1

if [[ ! -f "${PRIVATE_KEY_FILE}" ]]; then
  echo $PRIVATE_KEY_FILE "is not a regular file or does not exist"
  exit 1
fi

#FIXME not sure if we should keep these declarations here or to load from a config file
#GLOBAL CONSTANTS
REMOTE_BASE_DIR=/tmp
SANDBOX_DIR=/local/esdras/git/sebal-engine
VOMS_CERT_FOLDER=/tmp
VOMS_CERT_FILE=x509up_u1210
REMOTE_REPOSITORY_PATH=/home/fogbow
REMOTE_VOMS_CERT_FOLDER=/home/fogbow/Dev/keys/cert/
CONFIG_FILE=$SANDBOX_DIR/config/sebal.conf
SPEC_FILE=$SANDBOX_DIR/config/fetcherSpec

LOG4J=$SANDBOX_DIR/config/log4j.properties
if [[ -f ${LOG4J} ]]; then
  CONF_LOG=-Dlog4j.configuration=file:$LOG4J
else
  CONF_LOG=
fi

#Execution INFO
FETCHER_EXECUTION_INFO=$SANDBOX_DIR/fetcher/fetcher-info/fetcher-exec.info
if [ ! -e "$FETCHER_EXECUTION_INFO" ]; then
	echo "Creating execution info file"
	touch $FETCHER_EXECUTION_INFO
	echo "FETCHER_INSTANCE_ID=" >> $FETCHER_EXECUTION_INFO
	echo "FETCHER_USER_NAME=" >> $FETCHER_EXECUTION_INFO
	echo "FETCHER_INSTANCE_IP=" >> $FETCHER_EXECUTION_INFO
	echo "FETCHER_INSTANCE_PORT=" >> $FETCHER_EXECUTION_INFO
	echo "FETCHER_EXTRA_PORT=" >> $FETCHER_EXECUTION_INFO
fi

source $FETCHER_EXECUTION_INFO

########### FETCHER INFRASTRUCTURE ##############

# It starts fetcher VM
# Globals
#   CONFIG_FILE
#   SPEC_FILE
# Returns
#   infrastructure description
function create_fetcher_vm() {
  VM_FETCHER_INFO=`java $CONF_LOG -cp $SANDBOX_DIR/target/sebal-scheduler-0.0.1-SNAPSHOT.jar:target/lib/* org.fogbowcloud.sebal.engine.infrastructure.InfrastructureMain compute $CONFIG_FILE $SPEC_FILE "false" 2>&1`

  if [[ ! $VM_FETCHER_INFO == *"INSTANCE_ID"* ]]; then
    echo $VM_FETCHER_INFO
    echo "There is no resource available for deploy Fetcher App." >&2
    exit 1
  fi

  echo $VM_FETCHER_INFO
}

#FIXME extract to a method
#Coping scripts to mount disk.
SCRIPTS_DIR="sebal_scripts"
LOCAL_FILE_PATH="$SANDBOX_DIR/scripts/infrastructure/sebal_scripts"
REMOTE_FILE_PATH="$REMOTE_BASE_DIR";

# SSH to fetcher VM
# Globals
#   INSTANCE_PORT
#   PRIVATE_KEY_FILE
#   USER_NAME
#   INSTANCE_IP
# Args
#   remote_command
# Returns
function ssh_to_fetcher() {
  #FIXME check remote_command?
  local remote_command=$*
  ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p $INSTANCE_PORT -i $PRIVATE_KEY_FILE  $USER_NAME@$INSTANCE_IP ${remote_command}
}

# Globals
#   INSTANCE_PORT
#   PRIVATE_KEY_FILE
#   USER_NAME
#   INSTANCE_IP
# Args
#   src_path
#   dst_path
# Returns
function scp_to_fetcher() {
  #FIXME how about the -r modified?
  local src_path=$1
  local dst_path=$2
  scp -r -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -P $INSTANCE_PORT -i $PRIVATE_KEY_FILE $src_path $USER_NAME@$INSTANCE_IP:/$dst_path
}

function main() {
  echo "Creating Fetcher VM"
  VM_FETCHER_INFO=`create_fetcher_vm`

  #PREPARING VARIABLES FOR SSH/SCP
  #Sample return USER_NAME=fogbow;SSH_HOST=192.168.0.1;SSH_HOST=9000;SSH_HOST=
  INSTANCE_ID=$(echo $VM_FETCHER_INFO | cut -d";" -f1 | cut -d"=" -f2)
  USER_NAME=$(echo $VM_FETCHER_INFO | cut -d";" -f2 | cut -d"=" -f2)
  INSTANCE_IP=$(echo $VM_FETCHER_INFO | cut -d";" -f3 | cut -d"=" -f2)
  INSTANCE_PORT=$(echo $VM_FETCHER_INFO | cut -d";" -f4 | cut -d"=" -f2)
  EXTRA_PORT=$(echo $VM_FETCHER_INFO | cut -d";" -f5 | cut -d"=" -f2)
  
  echo "Uploading scripts"
  scp_to_fetcher $LOCAL_FILE_PATH $REMOTE_FILE_PATH

  echo "Change script dir permission"
  chmod_cmd="sudo chmod -R 777 $REMOTE_FILE_PATH/$SCRIPTS_DIR"
  ssh_to_fetcher ${chmod_cmd}

  #do we need it here?
  echo "Installing git"
  install_git_cmd="sudo sh $REMOTE_FILE_PATH/$SCRIPTS_DIR/install_git.sh"
  ssh_to_fetcher ${install_git_cmd}
  
  echo "Upload fetcher package"
  #scp_to_fetcher $APP_FILE_LOCAL_DIR/$APP_FILE $APP_FILE
  pkg_cmd="sudo sh $REMOTE_FILE_PATH/$SCRIPTS_DIR/pack_sebal_engine_repository.sh $REMOTE_REPOSITORY_PATH"
  ssh_to_fetcher ${pkg_cmd}

  echo "Upload certificates"
  LOCAL_FILE_PATH="$VOMS_CERT_FOLDER/$VOMS_CERT_FILE"
  FILE_PATH="$REMOTE_VOMS_CERT_FOLDER/$VOMS_CERT_FILE"
  mkdir_cmd="sudo mkdir -p $FILE_PATH"
  chmod_cmd="sudo chmod 777 $FILE_PATH"
  ssh_to_fetcher ${chmod_cmd}
  ssh_to_fetcher ${mkdir_cmd}
  scp_to_fetcher $LOCAL_FILE_PATH $FILE_PATH
  
  #Putting informations on Fetcher execution info.
  sed -i "/FETCHER_INSTANCE_ID=/ s/=.*/=$INSTANCE_ID/" $FETCHER_EXECUTION_INFO
  sed -i "/FETCHER_USER_NAME=/ s/=.*/=$USER_NAME/" $FETCHER_EXECUTION_INFO
  sed -i "/FETCHER_INSTANCE_IP=/ s/=.*/=$INSTANCE_IP/" $FETCHER_EXECUTION_INFO
  sed -i "/FETCHER_INSTANCE_PORT=/ s/=.*/=$INSTANCE_PORT/" $FETCHER_EXECUTION_INFO
  sed -i "/FETCHER_EXTRA_PORT=/ s/=.*/=$EXTRA_PORT/" $FETCHER_EXECUTION_INFO
}

#do deploy
main
