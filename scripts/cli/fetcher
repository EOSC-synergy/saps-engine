#!/bin/bash

if [[ $# -ne 2 ]]; then
  echo "Usage:" $0 "path/to/private_key path/to/sebal-engine/dir"
  exit 1
fi

PRIVATE_KEY_FILE=$1
WORK_DIR=$2
SCHEDULER_EXEC_INFO_FILE=$WORK_DIR/scheduler/scheduler-info/scheduler-exec.info
CRAWLER_EXEC_INFO_FILE=$WORK_DIR/crawler/crawler-info/crawler-exec.info
FETCHER_EXEC_INFO_FILE=$WORK_DIR/fetcher/fetcher-info/fetcher-exec.info

function ssh_to_fetcher() {
  #FIXME check remote_command?
  local remote_command=$*
  ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p $FETCHER_INSTANCE_PORT -i $PRIVATE_KEY_FILE  $FETCHER_USER_NAME@$FETCHER_INSTANCE_IP ${remote_command}

function main() {
  FETCHER_USER_NAME=$(sed -n 2p $FETCHER_EXEC_INFO_FILE | cut -d"=" -f2)
  FETCHER_INSTANCE_IP=$(sed -n 3p $FETCHER_EXEC_INFO_FILE | cut -d"=" -f2)
  FETCHER_INSTANCE_PORT=$(sed -n 4p $FETCHER_EXEC_INFO_FILE | cut -d"=" -f2)
  
  FTP_USER_NAME=$(sed -n 2p $CRAWLER_EXEC_INFO_FILE | cut -d"=" -f2)
  FTP_INSTANCE_IP=$(sed -n 3p $CRAWLER_EXEC_INFO_FILE | cut -d"=" -f2)
  FTP_INSTANCE_PORT=$(sed -n 4p $CRAWLER_EXEC_INFO_FILE | cut -d"=" -f2)

  DB_INSTANCE_IP=$(sed -n 3p $SCHEDULER_EXEC_INFO_FILE | cut -d"=" -f2)
  DB_PORT=$(sed -n 8p $SCHEDULER_EXEC_INFO_FILE | cut -d"=" -f2)

  echo "Sending fetcher app script to instance"
  fetcherapp_cmd="sudo sh $WORK_DIR/scripts/cli/fetcher-start.sh $DB_INSTANCE_IP $DB_PORT $FTP_USER_NAME $FTP_INSTANCE_IP $FTP_INSTANCE_PORT"
  ssh_to_fetcher ${fetcherapp_cmd}
}

main
